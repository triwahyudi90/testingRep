<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                        "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<!--
    $Id: struts-tiles.tld,v 1.1 2013/03/20 10:26:47 techdivision Exp $

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
   
         http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<taglib>
 <tlib-version>1.3</tlib-version>
 <jsp-version>1.2</jsp-version>
 <short-name>tiles</short-name>
 <uri>http://struts.apache.org/tags-tiles</uri>
 <description>&lt;p&gt;This tag library provides tiles tags.Tiles were previously called 
   Components. For historical reasons, names, pages, components and templates
   are used indifferently to design a tile. Also, a lot of tags and attribute 
   names are left for backward compatibility.To know more about tags defined
   in this library, check the associated documentation: tiles-doc.&lt;/p&gt;</description>
 <tag>
  <name>insert</name>
  <tag-class>org.apache.struts.tiles.taglib.InsertTag</tag-class>
  <body-content>JSP</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Insert a tiles/component/template.&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Insert a tiles/component/template with the possibility to pass 
      parameters (called attribute).
      A tile can be seen as a procedure that can take parameters or attributes.
      &lt;code&gt;&amp;lt;tiles:insert&amp;gt;&lt;/code&gt; allows to define these attributes 
      and pass them to the inserted jsp page, called template.
      Attributes are defined using nested tag &lt;code&gt;&amp;lt;tiles:put&amp;gt;&lt;/code&gt; or
      &lt;code&gt;&amp;lt;tiles:putList&amp;gt;&lt;/code&gt;.
      &lt;/p&gt;
      &lt;p&gt;You must specify one of this tag attribute :&lt;/p&gt;
      &lt;ul&gt;
        
        &lt;li&gt;&lt;code&gt;template&lt;/code&gt;, for inserting a tiles/component/template
        page,&lt;/li&gt;
        
        &lt;li&gt;&lt;code&gt;component&lt;/code&gt;, for inserting a tiles/component/template 
        page, (same as template)&lt;/li&gt;
        
        &lt;li&gt;&lt;code&gt;page&lt;/code&gt; for inserting a JSP page, (same as template)&lt;/li&gt;
        
        &lt;li&gt;&lt;code&gt;definition&lt;/code&gt;, for inserting a definition from 
        definitions factory&lt;/li&gt;
        
        &lt;li&gt;&lt;code&gt;attribute&lt;/code&gt;, surrounding tiles's attribute name whose 
        value is used.&lt;br/&gt;If attribute is associated to 'direct' flag 
        (see put), and flag is true, write attribute value (no insertion).&lt;/li&gt;
                     
        &lt;li&gt;&lt;code&gt;name&lt;/code&gt;, to let 'insert' determine the type of entities
        to insert. In this later case, search is done in this order : 
        definitions, tiles/components/templates, pages.&lt;/li&gt;
      &lt;/ul&gt;
     
      &lt;p&gt;In fact, Page, component and template, are equivalent as a tile, 
      component or template are jsp page.&lt;/p&gt;
      
      &lt;p&gt;&lt;strong&gt;Example : &lt;/strong&gt;&lt;/p&gt;
      &lt;pre&gt;
        &lt;code&gt;
          &amp;lt;tiles:insert page="/basic/myLayout.jsp" flush="true"&gt;
             &amp;lt;tiles:put name="title" value="My first page" /&gt;
             &amp;lt;tiles:put name="header" value="/common/header.jsp" /&gt;
             &amp;lt;tiles:put name="footer" value="/common/footer.jsp" /&gt;
             &amp;lt;tiles:put name="menu" value="/basic/menu.jsp" /&gt;
             &amp;lt;tiles:put name="body" value="/basic/helloBody.jsp" /&gt;
          &amp;lt;/tiles:insert&gt;
        &lt;/code&gt;
      &lt;/pre&gt;
      </description>
  <attribute>
   <name>template</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;A string representing the URI of a tile or template (a JSP page).
         &lt;/p&gt;
         &lt;p&gt;'page', 'component' and 'template' are synonyms : they have 
         exactly the same behavior.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>component</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Path (relative or absolute to webapps) of the component to insert.&lt;/p&gt;
         &lt;p&gt;'page', 'component' and 'template' are synonyms : 
         they have exactly the same behavior.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>page</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Path (relative or absolute to webapps) of the page to insert.&lt;/p&gt;
         &lt;p&gt;'page', 'component' and 'template' are synonyms : 
         they have exactly the same behavior.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>definition</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Name of the definition to insert. Definition are defined in a
         centralized file. For now, only definition from factory can be inserted
         with this attribute. To insert a definition defined with tag
         &lt;code&gt;&amp;lt;tiles:definition&amp;gt;&lt;/code&gt;, use beanName="".&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>attribute</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Name of an attribute in current tile/component context. Value of
         this attribute is passed to 'name' (see attribute 'name').&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>name</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Name of an entity to insert. Search is done in this order : 
         definition, attribute, [tile/component/template/page].&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanName</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Name of the bean used as value. Bean is retrieved from specified
         context, if any. Otherwise, method pageContext.findAttribute is used.
         If beanProperty is also specified, retrieve value from the
         corresponding bean property.&lt;/p&gt; 
         &lt;p&gt;If found bean (or property value)
         is instance of one of Attribute class (Direct, Instance, ...),
         insertion is done according to the class type. Otherwise, the toString
         method is called on the bean, and returned String is used as name to
         insert (see 'name' attribute).&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanProperty</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Bean property name. If specified, value is retrieve from this
         property. Support nested/indexed properties.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanScope</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt; Scope into which bean is searched. If not specified, method
         pageContext.findAttribute is used. Scope can be any JSP scope,
         'component', or 'template'. In these two later cases, bean is search in
         tile/component/template context.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>flush</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;True or false. If true, current page out stream is flushed 
         before insertion.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>ignore</name>
   <rtexprvalue>true</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;If this attribute is set to true, and the attribute specified by the
         name does not exist, simply return without writing anything. The
         default value is false, which will cause a runtime exception to be
         thrown.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>role</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;If the user is in the specified role, the tag is taken into account;
         otherwise, the tag is ignored (skipped).&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>controllerUrl</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Url of a controller called immediately before page is inserted.&lt;/p&gt;
         &lt;p&gt;Url usually denote a Struts action. Controller (action) is used to 
         prepare data to be render by inserted Tile.&lt;/p&gt;
         &lt;p&gt;See also controlerClass. Only one of controllerUrl or 
         controllerClass should be used.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>controllerClass</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Class type of a controller called immediately before page is inserted.&lt;/p&gt;
         &lt;p&gt;Controller is used to prepare data to be render by inserted Tile.&lt;/p&gt;
         &lt;p&gt;See also controlerUrl&lt;/p&gt;
         &lt;p&gt;Class must implements or extends one of the following :&lt;/p&gt;
         &lt;ul&gt;
           &lt;li&gt;org.apache.struts.tiles.Controller&lt;/li&gt;
           &lt;li&gt;org.apache.struts.tiles.ControllerSupport&lt;/li&gt;
           &lt;li&gt;org.apache.struts.action.Action (wrapper org.apache.struts.action.ActionController is used)&lt;/li&gt;
         &lt;/ul&gt;
         &lt;p&gt;See also controllerUrl. Only one of controllerUrl or controllerClass should be used.&lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>definition</name>
  <tag-class>org.apache.struts.tiles.taglib.DefinitionTag</tag-class>
  <body-content>JSP</body-content>
  <description>
         &lt;p&gt;&lt;strong&gt;Create a tile /component / template definition bean.
         &lt;/strong&gt;&lt;/p&gt;
         &lt;p&gt;Create a tile/component/template definition as a bean.
         Newly created bean will be saved under specified "id", in the requested "scope".
         Definition tag has same syntax as &lt;code&gt;insert&lt;/code&gt;&lt;/p&gt;
         </description>
  <attribute>
   <name>id</name>
   <required>true</required>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Specifies the name under which the newly created definition bean 
         will be saved.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>scope</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Specifies the variable scope into which the newly defined bean 
         will be created. 
         If not specified, the bean will be created in page scope.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>template</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;A string representing the URI of a tile/component/template 
         (a JSP page).&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>page</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;URL of the template / component to insert. Same as "template".&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>role</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Role to check before inserting this definition. If role is not 
         defined for current user, definition is not inserted. Checking is
         done at insert time, not during definition process.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>extends</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Name of a parent definition that is used to initialize this new 
         definition. Parent definition is searched in definitions factory.&lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>put</name>
  <tag-class>org.apache.struts.tiles.taglib.PutTag</tag-class>
  <body-content>JSP</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Put an attribute into tile/component/template context.
      &lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Define an attribute to pass to tile/component/template.
      This tag can only be used inside 'insert' or 'definition' tag.
      Value (or content) is specified using attribute 'value' (or 'content'), 
      or using the tag body.
      It is also possible to specify the type of the value :&lt;/p&gt;
      &lt;ul&gt;
        &lt;li&gt;string : Content is written directly.&lt;/li&gt;
        &lt;li&gt;page | template : Content is included from specified URL. Name is used as an URL.&lt;/li&gt;
        &lt;li&gt;definition : Content come from specified definition (from factory). Name is used as definition name.&lt;/li&gt;
      &lt;/ul&gt;
      &lt;p&gt;If 'type' attribute is not specified, content is 'untyped', unless it comes from a typed bean.&lt;/p&gt;
      &lt;p&gt;Note that using 'direct="true"' is equivalent to 'type="string"'.&lt;/p&gt;
      </description>
  <attribute>
   <name>name</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Name of the attribute.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>value</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Attribute value. Could be a String or an Object.
         Value can come from a direct assignment (value="aValue") or from a bean.
         One of 'value' 'content' or 'beanName' must be present.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>content</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Content that's put into tile scope.
         Synonym to value. Attribute added for compatibility with JSP Template.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>direct</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Determines how content is handled: true means content is
         printed &lt;em&gt;direct&lt;/em&gt;&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>type</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Specify content type: string, page, template or definition.&lt;/p&gt;
         &lt;ul&gt;
           &lt;li&gt;String : Content is printed directly.&lt;/li&gt;
           &lt;li&gt;page | template : Content is included from specified URL. Name is used as an URL.&lt;/li&gt;
           &lt;li&gt;definition : Value is the name of a definition defined in factory (xml file). Definition will be searched
           in the inserted tile, in a &lt;code&gt;&amp;lt;tiles:insert attribute="attributeName"&amp;gt;&lt;/code&gt; tag, where 'attributeName'
           is the name used for this tag.&lt;/li&gt;
         &lt;/ul&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanName</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Name of the bean used as value. Bean is retrieved from specified context, if any. Otherwise,
         method pageContext.findAttribute is used.
         If beanProperty is specified, retrieve value from the corresponding bean property.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanProperty</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Bean property name. If specified, value is retrieve from this property. Support nested/indexed
         properties.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanScope</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;
         Scope into which bean is searched. If not specified, method pageContext.findAttribute is used.
         Scope can be any JSP scope, 'tile', 'component', or 'template'.
         In these three later cases, bean is search in tile/component/template context.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>role</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;
         If the user is in the specified role, the tag is taken into account;
         otherwise, the tag is ignored (skipped).
         &lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>putList</name>
  <tag-class>org.apache.struts.tiles.taglib.PutListTag</tag-class>
  <body-content>JSP</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Declare a list that will be pass as attribute to tile.
      &lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Declare a list that will be pass as attribute to tile.
      List elements are added using the tag 'add'.
      This tag can only be used inside 'insert' or 'definition' tag.&lt;/p&gt;
      </description>
  <attribute>
   <name>name</name>
   <required>true</required>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Name of the list.&lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>add</name>
  <tag-class>org.apache.struts.tiles.taglib.AddTag</tag-class>
  <body-content>JSP</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Add an element to the surrounding list.
      Equivalent to 'put', but for list element.&lt;/strong&gt;&lt;/p&gt;
          
      &lt;p&gt;Add an element to the surrounding list.
      This tag can only be used inside putList tag.
      Value can come from a direct assignment (value="aValue") or from a bean.
      One of 'value' or 'beanName' must be present.&lt;/p&gt;
      </description>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Element value. Can be a String or Object.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>content</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;
         Element value. Can be a String or Object.
         Synonym to value. Attribute added for compatibility with JSP Template.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>direct</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;
         Determines how content is handled: true means content is
         printed &lt;em&gt;direct&lt;/em&gt;
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>type</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Specify content type: string, page, template or instance.&lt;/p&gt;
         &lt;ul&gt;
            &lt;li&gt;String : Content is printed directly.&lt;/li&gt;
            &lt;li&gt;page | template : Content is included from specified URL. Name is used as an URL.&lt;/li&gt;
            &lt;li&gt;definition : Value denote a definition defined in factory (xml file). Definition will be searched
            in the inserted tile, in a &lt;code&gt;&amp;lt;insert attribute="attributeName"&amp;gt;&lt;/code&gt; tag, where 'attributeName'
            is the name used for this tag.&lt;/li&gt;
         &lt;/ul&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanName</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;
         Name of the bean used as value. Bean is retrieved from specified context, if any. Otherwise,
         method pageContext.findAttribute is used.
         If beanProperty is specified, retrieve value from the corresponding bean property.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanProperty</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;
         Bean property name. If specified, value is retrieve from this property. 
         Support nested/indexed properties.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>beanScope</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;
         Scope into which bean is searched. If not specified, method pageContext.findAttribute is used.
         Scope can be any JSP scope, 'component', or 'template'.
         In these two later cases, bean is search in tile/component/template context.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>role</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;If the user is in the specified role, the tag is taken into account;
         otherwise, the tag is ignored (skipped).&lt;/p&gt;
         &lt;p&gt;The role isn't taken into account if &lt;code&gt;&amp;lt;add&amp;gt;&lt;/code&gt; 
         tag is used in a definition.&lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>get</name>
  <tag-class>org.apache.struts.tiles.taglib.GetTag</tag-class>
  <body-content>empty</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;
      Gets the content from request scope that was put there by a
      put tag.&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Retrieve content from tile context and include it.&lt;/p&gt;
      &lt;p&gt;Take into account the 'type' attribute.&lt;/p&gt;
      </description>
  <attribute>
   <name>name</name>
   <required>true</required>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;The name of the content to get from tile/component scope.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>ignore</name>
   <rtexprvalue>true</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;
         If this attribute is set to true, and the attribute specified by the name
         does not exist, simply return without writing anything. The default value is false, which will
         cause a runtime exception to be thrown.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>flush</name>
   <rtexprvalue>false</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;True or false. If true, current page  out stream is flushed before 
         insertion.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>role</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;If the user is in the specified role, the tag is taken into account;
         otherwise, the tag is ignored (skipped).&lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>getAsString</name>
  <tag-class>org.apache.struts.tiles.taglib.GetAttributeTag</tag-class>
  <body-content>empty</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;
      Render the value of the specified tile/component/template attribute to the current JspWriter
      &lt;/strong&gt;&lt;/p&gt;
          
      &lt;p&gt;Retrieve the value of the specified tile/component/template attribute 
      property, and render it to the current JspWriter as a String.
      The usual toString() conversions is applied on found value.&lt;/p&gt;
      &lt;p&gt;Throw a JSPException if named value is not found.&lt;/p&gt;
      </description>
  <attribute>
   <name>name</name>
   <required>true</required>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Attribute name.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>ignore</name>
   <rtexprvalue>true</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;
         If this attribute is set to true, and the attribute specified by the name
         does not exist, simply return without writing anything. The default value is false, which will
         cause a runtime exception to be thrown.
         &lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>role</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;
         If the user is in the specified role, the tag is taken into account;
         otherwise, the tag is ignored (skipped).
         &lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>useAttribute</name>
  <tag-class>org.apache.struts.tiles.taglib.UseAttributeTag</tag-class>
  <tei-class>org.apache.struts.tiles.taglib.UseAttributeTei</tei-class>
  <body-content>empty</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Use attribute value inside page.&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Declare a Java variable, and an attribute in the specified scope, 
      using tile attribute value.&lt;/p&gt;
      &lt;p&gt;Java variable and attribute will have the name specified by 'id',
      or the original name if not specified.&lt;/p&gt;
      </description>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Declared attribute and variable name.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>classname</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Class of the declared variable.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>scope</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Scope of the declared attribute. Default to 'page'.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>name</name>
   <required>true</required>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Tile's attribute name.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>ignore</name>
   <rtexprvalue>true</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;
         If this attribute is set to true, and the attribute specified by the name
         does not exist, simply return without error. The default value is false, which will
         cause a runtime exception to be thrown.
         &lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>importAttribute</name>
  <tag-class>org.apache.struts.tiles.taglib.ImportAttributeTag</tag-class>
  <body-content>empty</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Import Tile's attribute in specified context.&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Import attribute from tile to requested scope.
      Attribute name and scope are optional. If not specified, all tile
      attributes are imported in page scope.
      Once imported, an attribute can be used as any other beans from jsp 
      contexts.&lt;/p&gt;
      </description>
  <attribute>
   <name>name</name>
   <rtexprvalue>true</rtexprvalue>
   <description>
         &lt;p&gt;Tile's attribute name. If not specified, all attributes are
         imported.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>scope</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Scope into which attribute is imported. Default to page.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>ignore</name>
   <rtexprvalue>true</rtexprvalue>
   <type>boolean</type>
   <description>
         &lt;p&gt;If this attribute is set to true, and the attribute specified by 
         the name does not exist, simply return without error. The default 
         value is false, which will cause a runtime exception to be thrown.&lt;/p&gt;
         </description>
  </attribute>
 </tag>
 <tag>
  <name>initComponentDefinitions</name>
  <tag-class>org.apache.struts.tiles.taglib.InitDefinitionsTag</tag-class>
  <body-content>empty</body-content>
  <description>
      &lt;p&gt;&lt;strong&gt;Initialize Tile/Component definitions factory.&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;
      In order to use Tile/Component definitions factory, you need to initialize the factory.
      This is generally done in a initializing servlet. In particular, it is done in
      "ComponentActionServlet" if you use it.
      If you don't initialize factory in a servlet, you can initialize it using this tag. You need
      to provide the description file name, and optionally the factory classname.
      Initialization is done only once, at the first call of this tag. Subsequent calls
      are ignored (tag checks existence of the factory.
      &lt;/p&gt;
      </description>
  <attribute>
   <name>file</name>
   <required>true</required>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;Definition file name.&lt;/p&gt;
         </description>
  </attribute>
  <attribute>
   <name>classname</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         &lt;p&gt;If specified, classname of the factory to create and initialized.&lt;/p&gt;
         </description>
  </attribute>
 </tag>
</taglib>
